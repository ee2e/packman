{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../api\";\nvar roomsSlice = createSlice({\n  name: \"rooms\",\n  initialState: {\n    explore: {\n      page: 1,\n      rooms: []\n    },\n    favs: []\n  },\n  reducers: {\n    setExploreRooms: function setExploreRooms(state, action) {\n      var payload = action.payload;\n\n      if (payload.page === 1) {\n        state.explore.rooms = payload.rooms;\n        state.explore.page = 1;\n      } else {\n        state.explore.rooms = [].concat(_toConsumableArray(state.explore.rooms), _toConsumableArray(payload.rooms));\n      }\n    },\n    increasePage: function increasePage(state, action) {\n      state.explore.page += 1;\n    },\n    setFavs: function setFavs(state, action) {\n      state.favs = action.payload;\n    },\n    setFav: function setFav(state, action) {\n      var roomId = action.payload.roomId;\n      var room = state.explore.rooms.find(function (room) {\n        return room.id === roomId;\n      });\n\n      if (room) {\n        if (room.is_fav) {\n          room.is_fav = false;\n          state.favs = state.favs.filter(function (room) {\n            return room.id !== roomId;\n          });\n        } else {\n          room.is_fav = true;\n          state.favs.push(room);\n        }\n      }\n    }\n  }\n});\nvar _roomsSlice$actions = roomsSlice.actions,\n    setExploreRooms = _roomsSlice$actions.setExploreRooms,\n    increasePage = _roomsSlice$actions.increasePage,\n    setFavs = _roomsSlice$actions.setFavs,\n    setFav = _roomsSlice$actions.setFav;\nexport { setExploreRooms, increasePage, setFavs, setFav };\nexport var getRooms = function getRooms(page) {\n  return function _callee(dispatch, getState) {\n    var _getState, token, _await$api$rooms, results;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _getState = getState(), token = _getState.usersReducer.token;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(api.rooms(page, token));\n\n          case 4:\n            _await$api$rooms = _context.sent;\n            results = _await$api$rooms.data.results;\n            dispatch(setExploreRooms({\n              rooms: results,\n              page: page\n            }));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.warn(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n};\nexport default roomsSlice.reducer;","map":{"version":3,"sources":["/Users/eun/Desktop/특화프로젝트/s03p23d208/frontend/PackMan/redux/roomsSlice.js"],"names":["createSlice","api","roomsSlice","name","initialState","explore","page","rooms","favs","reducers","setExploreRooms","state","action","payload","increasePage","setFavs","setFav","roomId","room","find","id","is_fav","filter","push","actions","getRooms","dispatch","getState","token","usersReducer","results","data","console","warn","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../api\";\r\n\r\nconst roomsSlice = createSlice({\r\n  name: \"rooms\",\r\n  initialState: {\r\n    explore: {\r\n      page: 1,\r\n      rooms: [],\r\n    },\r\n    favs: [],\r\n  },\r\n  reducers: {\r\n    setExploreRooms(state, action) {\r\n      const { payload } = action;\r\n      if (payload.page === 1) {\r\n        state.explore.rooms = payload.rooms;\r\n        state.explore.page = 1;\r\n      } else {\r\n        state.explore.rooms = [...state.explore.rooms, ...payload.rooms];\r\n      }\r\n    },\r\n    increasePage(state, action) {\r\n      state.explore.page += 1;\r\n    },\r\n    setFavs(state, action) {\r\n      state.favs = action.payload;\r\n    },\r\n    setFav(state, action) {\r\n      const {\r\n        payload: { roomId },\r\n      } = action;\r\n      const room = state.explore.rooms.find((room) => room.id === roomId);\r\n      if (room) {\r\n        if (room.is_fav) {\r\n          room.is_fav = false;\r\n          state.favs = state.favs.filter((room) => room.id !== roomId);\r\n        } else {\r\n          room.is_fav = true;\r\n          state.favs.push(room);\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setExploreRooms,\r\n  increasePage,\r\n  setFavs,\r\n  setFav,\r\n} = roomsSlice.actions;\r\n\r\nexport const getRooms = (page) => async (dispatch, getState) => {\r\n  const {\r\n    usersReducer: { token },\r\n  } = getState();\r\n  try {\r\n    const {\r\n      data: { results },\r\n    } = await api.rooms(page, token);\r\n    dispatch(\r\n      setExploreRooms({\r\n        rooms: results,\r\n        page,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n};\r\n\r\nexport default roomsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}