{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from \"axios\";\n\nvar callApi = function callApi(method, path, data, jwt) {\n  var params,\n      headers,\n      baseUrl,\n      fullUrl,\n      _args = arguments;\n  return _regeneratorRuntime.async(function callApi$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n          headers = {\n            Authorization: \"Bearer \" + jwt,\n            \"Content-Type\": \"application/json\"\n          };\n          baseUrl = \"http://127.0.0.1:8000/\";\n          fullUrl = \"\" + baseUrl + path;\n\n          if (!(method === \"get\" || method === \"delete\")) {\n            _context.next = 8;\n            break;\n          }\n\n          return _context.abrupt(\"return\", axios[method](fullUrl, {\n            headers: headers,\n            params: params\n          }));\n\n        case 8:\n          return _context.abrupt(\"return\", axios[method](fullUrl, data, {\n            headers: headers\n          }));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default {\n  createAccount: function createAccount(form) {\n    return callApi(\"post\", \"rest-auth/signup/\", form);\n  },\n  login: function login(form) {\n    return callApi(\"post\", \"rest-auth/login\", form);\n  },\n  rooms: function rooms() {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var token = arguments.length > 1 ? arguments[1] : undefined;\n    return callApi(\"get\", \"/rooms/?page=\" + page, null, token);\n  },\n  favs: function favs(id, token) {\n    return callApi(\"get\", \"/users/\" + id + \"/favs/\", null, token);\n  },\n  toggleFavs: function toggleFavs(userId, roomId, token) {\n    return callApi(\"put\", \"/users/\" + userId + \"/favs/\", {\n      pk: roomId\n    }, token);\n  },\n  search: function search(form, token) {\n    return callApi(\"get\", \"/rooms/search/\", null, token, form);\n  }\n};","map":{"version":3,"sources":["/Users/eun/Desktop/특화프로젝트/s03p23d208/frontend/PackMan/api.js"],"names":["axios","callApi","method","path","data","jwt","params","headers","Authorization","baseUrl","fullUrl","createAccount","form","login","rooms","page","token","favs","id","toggleFavs","userId","roomId","pk","search"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,MAAP,EAAeC,IAAf,EAAqBC,IAArB,EAA2BC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCC,UAAAA,MAAhC,2DAAyC,EAAzC;AACRC,UAAAA,OADQ,GACE;AACdC,YAAAA,aAAa,cAAYH,GADX;AAEd,4BAAgB;AAFF,WADF;AAKRI,UAAAA,OALQ,GAKE,wBALF;AAMRC,UAAAA,OANQ,QAMKD,OANL,GAMeN,IANf;;AAAA,gBAOVD,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,QAPrB;AAAA;AAAA;AAAA;;AAAA,2CAQLF,KAAK,CAACE,MAAD,CAAL,CAAcQ,OAAd,EAAuB;AAAEH,YAAAA,OAAO,EAAPA,OAAF;AAAWD,YAAAA,MAAM,EAANA;AAAX,WAAvB,CARK;;AAAA;AAAA,2CAULN,KAAK,CAACE,MAAD,CAAL,CAAcQ,OAAd,EAAuBN,IAAvB,EAA6B;AAAEG,YAAAA,OAAO,EAAPA;AAAF,WAA7B,CAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAcA,eAAe;AACbI,EAAAA,aAAa,EAAE,uBAACC,IAAD;AAAA,WAAUX,OAAO,CAAC,MAAD,EAAS,mBAAT,EAA8BW,IAA9B,CAAjB;AAAA,GADF;AAEbC,EAAAA,KAAK,EAAE,eAACD,IAAD;AAAA,WAAUX,OAAO,CAAC,MAAD,EAAS,iBAAT,EAA4BW,IAA5B,CAAjB;AAAA,GAFM;AAGbE,EAAAA,KAAK,EAAE;AAAA,QAACC,IAAD,uEAAQ,CAAR;AAAA,QAAWC,KAAX;AAAA,WACLf,OAAO,CAAC,KAAD,oBAAwBc,IAAxB,EAAgC,IAAhC,EAAsCC,KAAtC,CADF;AAAA,GAHM;AAKbC,EAAAA,IAAI,EAAE,cAACC,EAAD,EAAKF,KAAL;AAAA,WAAef,OAAO,CAAC,KAAD,cAAkBiB,EAAlB,aAA8B,IAA9B,EAAoCF,KAApC,CAAtB;AAAA,GALO;AAMbG,EAAAA,UAAU,EAAE,oBAACC,MAAD,EAASC,MAAT,EAAiBL,KAAjB;AAAA,WACVf,OAAO,CAAC,KAAD,cAAkBmB,MAAlB,aAAkC;AAAEE,MAAAA,EAAE,EAAED;AAAN,KAAlC,EAAkDL,KAAlD,CADG;AAAA,GANC;AAQbO,EAAAA,MAAM,EAAE,gBAACX,IAAD,EAAOI,KAAP;AAAA,WAAiBf,OAAO,CAAC,KAAD,EAAQ,gBAAR,EAA0B,IAA1B,EAAgCe,KAAhC,EAAuCJ,IAAvC,CAAxB;AAAA;AARK,CAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst callApi = async (method, path, data, jwt, params = {}) => {\r\n  const headers = {\r\n    Authorization: `Bearer ${jwt}`,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n  const baseUrl = \"http://127.0.0.1:8000/\";\r\n  const fullUrl = `${baseUrl}${path}`;\r\n  if (method === \"get\" || method === \"delete\") {\r\n    return axios[method](fullUrl, { headers, params });\r\n  } else {\r\n    return axios[method](fullUrl, data, { headers });\r\n  }\r\n};\r\n\r\nexport default {\r\n  createAccount: (form) => callApi(\"post\", \"rest-auth/signup/\", form),\r\n  login: (form) => callApi(\"post\", \"rest-auth/login\", form),\r\n  rooms: (page = 1, token) =>\r\n    callApi(\"get\", `/rooms/?page=${page}`, null, token),\r\n  favs: (id, token) => callApi(\"get\", `/users/${id}/favs/`, null, token),\r\n  toggleFavs: (userId, roomId, token) =>\r\n    callApi(\"put\", `/users/${userId}/favs/`, { pk: roomId }, token),\r\n  search: (form, token) => callApi(\"get\", \"/rooms/search/\", null, token, form),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}