{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\SSAFY\\\\s03p23d208\\\\frontend\\\\PackMan\\\\components\\\\Auth\\\\Find.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Input, Button } from \"react-native-elements\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nvar SCREEN_WIDTH = Dimensions.get(\"window\").width;\nvar SCREEN_HEIGHT = Dimensions.get(\"window\").height;\nUIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n\nvar TabSelector = function TabSelector(_ref) {\n  var selected = _ref.selected;\n  return React.createElement(View, {\n    style: styles.selectorContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: selected && styles.selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nTabSelector.propTypes = {\n  selected: PropTypes.bool.isRequired\n};\n\nvar LoginScreen2 = function (_Component) {\n  _inherits(LoginScreen2, _Component);\n\n  var _super = _createSuper(LoginScreen2);\n\n  function LoginScreen2(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen2);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selectedCategory: 0,\n      isLoading: false\n    };\n    _this.selectCategory = _this.selectCategory.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginScreen2, [{\n    key: \"selectCategory\",\n    value: function selectCategory(selectedCategory) {\n      LayoutAnimation.easeInEaseOut();\n      this.setState({\n        selectedCategory: selectedCategory,\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"find\",\n    value: function find() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          selectedCategory = _this$state.selectedCategory,\n          isLoading = _this$state.isLoading,\n          find = _this$state.find;\n      var isLoginPage = selectedCategory === 0;\n      var isSignUpPage = selectedCategory === 1;\n      var navigation = this.props.navigation;\n      return React.createElement(KeyboardAvoidingView, {\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: Keyboard.dismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.inner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/logo.gif\"),\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.loginContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        disabled: isLoading,\n        type: \"clear\",\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this2.selectCategory(0);\n        },\n        containerStyle: {\n          flex: 1\n        },\n        titleStyle: [styles.categoryText, isLoginPage && styles.selectedCategoryText],\n        title: \"이메일 찾기\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        disabled: isLoading,\n        type: \"clear\",\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this2.selectCategory(1);\n        },\n        containerStyle: {\n          flex: 1\n        },\n        titleStyle: [styles.categoryText, isSignUpPage && styles.selectedCategoryText],\n        title: \"비밀번호 찾기\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.rowSelector,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, React.createElement(TabSelector, {\n        selected: isLoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), React.createElement(TabSelector, {\n        selected: isSignUpPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.formContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, isSignUpPage && React.createElement(Input, {\n        containerStyle: styles.inputContainer,\n        inputStyle: styles.input,\n        placeholder: \"email@address.com\",\n        keyboardType: \"email-address\",\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.userNameInput.focus();\n        },\n        leftIcon: React.createElement(MaterialIcons, {\n          name: \"email\",\n          size: 24,\n          color: \"#03bcdb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }), isSignUpPage ? React.createElement(Input, {\n        containerStyle: styles.inputContainer,\n        placeholder: \"\\uD64D\\uAE38\\uB3D9\",\n        returnKeyType: \"next\",\n        ref: function ref(input) {\n          return _this2.userNameInput = input;\n        },\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.phoneNumberInput.focus();\n        },\n        leftIcon: React.createElement(MaterialIcons, {\n          name: \"person\",\n          size: 24,\n          color: \"#03bcdb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }\n      }) : React.createElement(Input, {\n        containerStyle: styles.inputContainer,\n        placeholder: \"\\uD64D\\uAE38\\uB3D9\",\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return _this2.phoneNumberInput.focus();\n        },\n        leftIcon: React.createElement(MaterialIcons, {\n          name: \"person\",\n          size: 24,\n          color: \"#03bcdb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 23\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }), React.createElement(Input, {\n        containerStyle: styles.inputContainer,\n        placeholder: \"0101234567\",\n        ref: function ref(input) {\n          return _this2.phoneNumberInput = input;\n        },\n        onSubmitEditing: find,\n        leftIcon: React.createElement(MaterialIcons, {\n          name: \"smartphone\",\n          size: 24,\n          color: \"#03bcdb\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.buttonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        title: \"\\uD655\\uC778\",\n        buttonStyle: styles.findButton,\n        containerStyle: styles.findButtonContainer,\n        titleStyle: styles.findTitle,\n        loading: isLoading,\n        disabled: isLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }), React.createElement(Button, {\n        title: \"\\uB4A4\\uB85C\",\n        buttonStyle: styles.backButton,\n        containerStyle: styles.backButtonContainer,\n        titleStyle: styles.backTitle,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      })))))));\n    }\n  }]);\n\n  return LoginScreen2;\n}(Component);\n\nexport { LoginScreen2 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  inner: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    width: 150,\n    height: 88,\n    marginBottom: 40\n  },\n  rowSelector: {\n    height: 20,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  selectorContainer: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  selected: {\n    position: \"absolute\",\n    borderRadius: 50,\n    height: 0,\n    width: 0,\n    top: -5,\n    borderRightWidth: 70,\n    borderBottomWidth: 70,\n    borderColor: \"white\",\n    backgroundColor: \"white\"\n  },\n  formContainer: {\n    backgroundColor: \"white\",\n    width: SCREEN_WIDTH - 30,\n    borderRadius: 10,\n    paddingTop: 32,\n    paddingBottom: 32,\n    alignItems: \"center\"\n  },\n  loginText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  categoryText: {\n    textAlign: \"center\",\n    color: \"#03bcdb\",\n    fontSize: 24,\n    fontFamily: \"BMHANNA\",\n    backgroundColor: \"transparent\",\n    opacity: 0.54\n  },\n  selectedCategoryText: {\n    opacity: 1\n  },\n  inputContainer: {\n    width: 350\n  },\n  findButton: {\n    backgroundColor: \"#03bcdb\",\n    borderWidth: 2,\n    borderColor: \"#03bcdb\",\n    borderRadius: 6\n  },\n  backButton: {\n    backgroundColor: \"#e0e0e0\",\n    borderWidth: 2,\n    borderColor: \"#e0e0e0\",\n    borderRadius: 6\n  },\n  findButtonContainer: {\n    marginTop: 10,\n    height: 60,\n    width: 80\n  },\n  backButtonContainer: {\n    marginTop: 10,\n    marginLeft: 10,\n    height: 60,\n    width: 80\n  },\n  findTitle: {\n    fontWeight: \"bold\"\n  },\n  backTitle: {\n    fontWeight: \"bold\",\n    color: \"#000\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    width: \"100%\",\n    marginTop: 30,\n    marginRight: 50\n  }\n});","map":{"version":3,"sources":["C:/SSAFY/s03p23d208/frontend/PackMan/components/Auth/Find.js"],"names":["React","Component","PropTypes","Input","Button","MaterialIcons","SCREEN_WIDTH","Dimensions","get","width","SCREEN_HEIGHT","height","UIManager","setLayoutAnimationEnabledExperimental","TabSelector","selected","styles","selectorContainer","propTypes","bool","isRequired","LoginScreen2","props","state","selectedCategory","isLoading","selectCategory","bind","LayoutAnimation","easeInEaseOut","setState","find","isLoginPage","isSignUpPage","navigation","Platform","OS","container","Keyboard","dismiss","inner","require","logo","loginContainer","flexDirection","flex","categoryText","selectedCategoryText","rowSelector","formContainer","inputContainer","input","userNameInput","focus","phoneNumberInput","buttonsContainer","findButton","findButtonContainer","findTitle","backButton","backButtonContainer","backTitle","goBack","StyleSheet","create","backgroundColor","alignItems","justifyContent","marginBottom","position","borderRadius","top","borderRightWidth","borderBottomWidth","borderColor","paddingTop","paddingBottom","loginText","fontSize","fontWeight","color","textAlign","fontFamily","opacity","borderWidth","marginTop","marginLeft","marginRight"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;;;AAYA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,IAAMC,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;AACA,IAAMC,aAAa,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA/C;AAGAC,SAAS,CAACC,qCAAV,IACED,SAAS,CAACC,qCAAV,CAAgD,IAAhD,CADF;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACpC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,QAAQ,IAAIC,MAAM,CAACD,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQAD,WAAW,CAACI,SAAZ,GAAwB;AACtBH,EAAAA,QAAQ,EAAEb,SAAS,CAACiB,IAAV,CAAeC;AADH,CAAxB;;IAIqBC,Y;;;;;AACnB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE,CADP;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AARiB;AASlB;;;;mCAEcH,gB,EAAkB;AAC/BI,MAAAA,eAAe,CAACC,aAAhB;AACA,WAAKC,QAAL,CAAc;AACZN,QAAAA,gBAAgB,EAAhBA,gBADY;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID;;;2BAEM,CAAE;;;6BAEA;AAAA;;AAAA,wBACuC,KAAKF,KAD5C;AAAA,UACCC,gBADD,eACCA,gBADD;AAAA,UACmBC,SADnB,eACmBA,SADnB;AAAA,UAC8BM,IAD9B,eAC8BA,IAD9B;AAEP,UAAMC,WAAW,GAAGR,gBAAgB,KAAK,CAAzC;AACA,UAAMS,YAAY,GAAGT,gBAAgB,KAAK,CAA1C;AAHO,UAICU,UAJD,GAIgB,KAAKZ,KAJrB,CAICY,UAJD;AAMP,aACE,oBAAC,oBAAD;AACE,QAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,IAAe,KAAf,GAAuB,SAAvB,GAAmC,QAD/C;AAEE,QAAA,KAAK,EAAEpB,MAAM,CAACqB,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEC,OAAO,yBADjB;AAEE,QAAA,KAAK,EAAEzB,MAAM,CAAC0B,IAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE1B,MAAM,CAAC2B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,aAAa,EAAE;AAAjB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAEnB,SADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,aAAa,EAAE,GAHjB;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,cAAL,CAAoB,CAApB,CAAN;AAAA,SAJX;AAKE,QAAA,cAAc,EAAE;AAAEmB,UAAAA,IAAI,EAAE;AAAR,SALlB;AAME,QAAA,UAAU,EAAE,CACV7B,MAAM,CAAC8B,YADG,EAEVd,WAAW,IAAIhB,MAAM,CAAC+B,oBAFZ,CANd;AAUE,QAAA,KAAK,EAAE,QAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAaE,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAEtB,SADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,aAAa,EAAE,GAHjB;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,cAAL,CAAoB,CAApB,CAAN;AAAA,SAJX;AAKE,QAAA,cAAc,EAAE;AAAEmB,UAAAA,IAAI,EAAE;AAAR,SALlB;AAME,QAAA,UAAU,EAAE,CACV7B,MAAM,CAAC8B,YADG,EAEVb,YAAY,IAAIjB,MAAM,CAAC+B,oBAFb,CANd;AAUE,QAAA,KAAK,EAAE,SAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,CADF,EA2BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/B,MAAM,CAACgC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAEhB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAEC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA3BF,EA+BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACiC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGhB,YAAY,IACX,oBAAC,KAAD;AACE,QAAA,cAAc,EAAEjB,MAAM,CAACkC,cADzB;AAEE,QAAA,UAAU,EAAElC,MAAM,CAACmC,KAFrB;AAGE,QAAA,WAAW,EAAC,mBAHd;AAIE,QAAA,YAAY,EAAC,eAJf;AAKE,QAAA,aAAa,EAAC,MALhB;AAME,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACC,aAAL,CAAmBC,KAAnB,EAAN;AAAA,SANnB;AAOE,QAAA,QAAQ,EACN,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,OAApB;AAA4B,UAAA,IAAI,EAAE,EAAlC;AAAsC,UAAA,KAAK,EAAC,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAcGpB,YAAY,GACX,oBAAC,KAAD;AACE,QAAA,cAAc,EAAEjB,MAAM,CAACkC,cADzB;AAEE,QAAA,WAAW,EAAC,oBAFd;AAGE,QAAA,aAAa,EAAC,MAHhB;AAIE,QAAA,GAAG,EAAE,aAACC,KAAD;AAAA,iBAAY,MAAI,CAACC,aAAL,GAAqBD,KAAjC;AAAA,SAJP;AAKE,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACG,gBAAL,CAAsBD,KAAtB,EAAN;AAAA,SALnB;AAME,QAAA,QAAQ,EACN,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,QAApB;AAA6B,UAAA,IAAI,EAAE,EAAnC;AAAuC,UAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW,GAYX,oBAAC,KAAD;AACE,QAAA,cAAc,EAAErC,MAAM,CAACkC,cADzB;AAEE,QAAA,WAAW,EAAC,oBAFd;AAGE,QAAA,aAAa,EAAC,MAHhB;AAIE,QAAA,eAAe,EAAE;AAAA,iBAAM,MAAI,CAACI,gBAAL,CAAsBD,KAAtB,EAAN;AAAA,SAJnB;AAKE,QAAA,QAAQ,EACN,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,QAApB;AAA6B,UAAA,IAAI,EAAE,EAAnC;AAAuC,UAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BJ,EAqCE,oBAAC,KAAD;AACE,QAAA,cAAc,EAAErC,MAAM,CAACkC,cADzB;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,GAAG,EAAE,aAACC,KAAD;AAAA,iBAAY,MAAI,CAACG,gBAAL,GAAwBH,KAApC;AAAA,SAHP;AAIE,QAAA,eAAe,EAAEpB,IAJnB;AAKE,QAAA,QAAQ,EACN,oBAAC,aAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArCF,EAkDE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEf,MAAM,CAACuC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,WAAW,EAAEvC,MAAM,CAACwC,UAFtB;AAGE,QAAA,cAAc,EAAExC,MAAM,CAACyC,mBAHzB;AAIE,QAAA,UAAU,EAAEzC,MAAM,CAAC0C,SAJrB;AAKE,QAAA,OAAO,EAAEjC,SALX;AAME,QAAA,QAAQ,EAAEA,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,WAAW,EAAET,MAAM,CAAC2C,UAFtB;AAGE,QAAA,cAAc,EAAE3C,MAAM,CAAC4C,mBAHzB;AAIE,QAAA,UAAU,EAAE5C,MAAM,CAAC6C,SAJrB;AAKE,QAAA,OAAO,EAAE;AAAA,iBAAM3B,UAAU,CAAC4B,MAAX,EAAN;AAAA,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAlDF,CA/BF,CALF,CADF,CAJF,CADF;AAmHD;;;;EA/IuC7D,S;;SAArBoB,Y;AAkJrB,IAAML,MAAM,GAAG+C,UAAU,CAACC,MAAX,CAAkB;AAC/B3B,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAEToB,IAAAA,eAAe,EAAE;AAFR,GADoB;AAK/BzB,EAAAA,KAAK,EAAE;AACLK,IAAAA,IAAI,EAAE,CADD;AAELqB,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,cAAc,EAAE;AAHX,GALwB;AAU/BzB,EAAAA,IAAI,EAAE;AACJjC,IAAAA,KAAK,EAAE,GADH;AAEJE,IAAAA,MAAM,EAAE,EAFJ;AAGJyD,IAAAA,YAAY,EAAE;AAHV,GAVyB;AAe/BpB,EAAAA,WAAW,EAAE;AACXrC,IAAAA,MAAM,EAAE,EADG;AAEXiC,IAAAA,aAAa,EAAE,KAFJ;AAGXsB,IAAAA,UAAU,EAAE;AAHD,GAfkB;AAoB/BjD,EAAAA,iBAAiB,EAAE;AACjB4B,IAAAA,IAAI,EAAE,CADW;AAEjBqB,IAAAA,UAAU,EAAE;AAFK,GApBY;AAwB/BnD,EAAAA,QAAQ,EAAE;AACRsD,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,YAAY,EAAE,EAFN;AAGR3D,IAAAA,MAAM,EAAE,CAHA;AAIRF,IAAAA,KAAK,EAAE,CAJC;AAKR8D,IAAAA,GAAG,EAAE,CAAC,CALE;AAMRC,IAAAA,gBAAgB,EAAE,EANV;AAORC,IAAAA,iBAAiB,EAAE,EAPX;AAQRC,IAAAA,WAAW,EAAE,OARL;AASRT,IAAAA,eAAe,EAAE;AATT,GAxBqB;AAmC/BhB,EAAAA,aAAa,EAAE;AACbgB,IAAAA,eAAe,EAAE,OADJ;AAEbxD,IAAAA,KAAK,EAAEH,YAAY,GAAG,EAFT;AAGbgE,IAAAA,YAAY,EAAE,EAHD;AAIbK,IAAAA,UAAU,EAAE,EAJC;AAKbC,IAAAA,aAAa,EAAE,EALF;AAMbV,IAAAA,UAAU,EAAE;AANC,GAnCgB;AA2C/BW,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,KAAK,EAAE;AAHE,GA3CoB;AAgD/BlC,EAAAA,YAAY,EAAE;AACZmC,IAAAA,SAAS,EAAE,QADC;AAEZD,IAAAA,KAAK,EAAE,SAFK;AAGZF,IAAAA,QAAQ,EAAE,EAHE;AAIZI,IAAAA,UAAU,EAAE,SAJA;AAKZjB,IAAAA,eAAe,EAAE,aALL;AAMZkB,IAAAA,OAAO,EAAE;AANG,GAhDiB;AAwD/BpC,EAAAA,oBAAoB,EAAE;AACpBoC,IAAAA,OAAO,EAAE;AADW,GAxDS;AA2D/BjC,EAAAA,cAAc,EAAE;AACdzC,IAAAA,KAAK,EAAE;AADO,GA3De;AA8D/B+C,EAAAA,UAAU,EAAE;AACVS,IAAAA,eAAe,EAAE,SADP;AAEVmB,IAAAA,WAAW,EAAE,CAFH;AAGVV,IAAAA,WAAW,EAAE,SAHH;AAIVJ,IAAAA,YAAY,EAAE;AAJJ,GA9DmB;AAoE/BX,EAAAA,UAAU,EAAE;AACVM,IAAAA,eAAe,EAAE,SADP;AAEVmB,IAAAA,WAAW,EAAE,CAFH;AAGVV,IAAAA,WAAW,EAAE,SAHH;AAIVJ,IAAAA,YAAY,EAAE;AAJJ,GApEmB;AA0E/Bb,EAAAA,mBAAmB,EAAE;AACnB4B,IAAAA,SAAS,EAAE,EADQ;AAEnB1E,IAAAA,MAAM,EAAE,EAFW;AAGnBF,IAAAA,KAAK,EAAE;AAHY,GA1EU;AA+E/BmD,EAAAA,mBAAmB,EAAE;AACnByB,IAAAA,SAAS,EAAE,EADQ;AAEnBC,IAAAA,UAAU,EAAE,EAFO;AAGnB3E,IAAAA,MAAM,EAAE,EAHW;AAInBF,IAAAA,KAAK,EAAE;AAJY,GA/EU;AAqF/BiD,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,UAAU,EAAE;AAAd,GArFoB;AAsF/BlB,EAAAA,SAAS,EAAE;AAAEkB,IAAAA,UAAU,EAAE,MAAd;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAtFoB;AAuF/BzB,EAAAA,gBAAgB,EAAE;AAChBX,IAAAA,aAAa,EAAE,KADC;AAEhBuB,IAAAA,cAAc,EAAE,UAFA;AAGhB1D,IAAAA,KAAK,EAAE,MAHS;AAIhB4E,IAAAA,SAAS,EAAE,EAJK;AAKhBE,IAAAA,WAAW,EAAE;AALG;AAvFa,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Image,\r\n  Dimensions,\r\n  LayoutAnimation,\r\n  UIManager,\r\n  KeyboardAvoidingView,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n} from \"react-native\";\r\nimport { Input, Button } from \"react-native-elements\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nconst SCREEN_WIDTH = Dimensions.get(\"window\").width;\r\nconst SCREEN_HEIGHT = Dimensions.get(\"window\").height;\r\n\r\n// Enable LayoutAnimation on Android\r\nUIManager.setLayoutAnimationEnabledExperimental &&\r\n  UIManager.setLayoutAnimationEnabledExperimental(true);\r\n\r\nconst TabSelector = ({ selected }) => {\r\n  return (\r\n    <View style={styles.selectorContainer}>\r\n      <View style={selected && styles.selected} />\r\n    </View>\r\n  );\r\n};\r\n\r\nTabSelector.propTypes = {\r\n  selected: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default class LoginScreen2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedCategory: 0,\r\n      isLoading: false,\r\n    };\r\n\r\n    this.selectCategory = this.selectCategory.bind(this);\r\n  }\r\n\r\n  selectCategory(selectedCategory) {\r\n    LayoutAnimation.easeInEaseOut();\r\n    this.setState({\r\n      selectedCategory,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  find() {}\r\n\r\n  render() {\r\n    const { selectedCategory, isLoading, find } = this.state;\r\n    const isLoginPage = selectedCategory === 0;\r\n    const isSignUpPage = selectedCategory === 1;\r\n    const { navigation } = this.props;\r\n\r\n    return (\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n        style={styles.container}\r\n      >\r\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n          <View style={styles.inner}>\r\n            <Image\r\n              source={require(\"../../assets/logo.gif\")}\r\n              style={styles.logo}\r\n            />\r\n            <View style={styles.loginContainer}>\r\n              <View style={{ flexDirection: \"row\" }}>\r\n                <Button\r\n                  disabled={isLoading}\r\n                  type=\"clear\"\r\n                  activeOpacity={0.7}\r\n                  onPress={() => this.selectCategory(0)}\r\n                  containerStyle={{ flex: 1 }}\r\n                  titleStyle={[\r\n                    styles.categoryText,\r\n                    isLoginPage && styles.selectedCategoryText,\r\n                  ]}\r\n                  title={\"이메일 찾기\"}\r\n                />\r\n                <Button\r\n                  disabled={isLoading}\r\n                  type=\"clear\"\r\n                  activeOpacity={0.7}\r\n                  onPress={() => this.selectCategory(1)}\r\n                  containerStyle={{ flex: 1 }}\r\n                  titleStyle={[\r\n                    styles.categoryText,\r\n                    isSignUpPage && styles.selectedCategoryText,\r\n                  ]}\r\n                  title={\"비밀번호 찾기\"}\r\n                />\r\n              </View>\r\n              <View style={styles.rowSelector}>\r\n                <TabSelector selected={isLoginPage} />\r\n                <TabSelector selected={isSignUpPage} />\r\n              </View>\r\n              <View style={styles.formContainer}>\r\n                {isSignUpPage && (\r\n                  <Input\r\n                    containerStyle={styles.inputContainer}\r\n                    inputStyle={styles.input}\r\n                    placeholder=\"email@address.com\"\r\n                    keyboardType=\"email-address\"\r\n                    returnKeyType=\"next\"\r\n                    onSubmitEditing={() => this.userNameInput.focus()}\r\n                    leftIcon={\r\n                      <MaterialIcons name=\"email\" size={24} color=\"#03bcdb\" />\r\n                    }\r\n                  />\r\n                )}\r\n                {isSignUpPage ? (\r\n                  <Input\r\n                    containerStyle={styles.inputContainer}\r\n                    placeholder=\"홍길동\"\r\n                    returnKeyType=\"next\"\r\n                    ref={(input) => (this.userNameInput = input)}\r\n                    onSubmitEditing={() => this.phoneNumberInput.focus()}\r\n                    leftIcon={\r\n                      <MaterialIcons name=\"person\" size={24} color=\"#03bcdb\" />\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    containerStyle={styles.inputContainer}\r\n                    placeholder=\"홍길동\"\r\n                    returnKeyType=\"next\"\r\n                    onSubmitEditing={() => this.phoneNumberInput.focus()}\r\n                    leftIcon={\r\n                      <MaterialIcons name=\"person\" size={24} color=\"#03bcdb\" />\r\n                    }\r\n                  />\r\n                )}\r\n\r\n                <Input\r\n                  containerStyle={styles.inputContainer}\r\n                  placeholder=\"0101234567\"\r\n                  ref={(input) => (this.phoneNumberInput = input)}\r\n                  onSubmitEditing={find}\r\n                  leftIcon={\r\n                    <MaterialIcons\r\n                      name=\"smartphone\"\r\n                      size={24}\r\n                      color=\"#03bcdb\"\r\n                    />\r\n                  }\r\n                />\r\n                <View style={styles.buttonsContainer}>\r\n                  <Button\r\n                    title=\"확인\"\r\n                    buttonStyle={styles.findButton}\r\n                    containerStyle={styles.findButtonContainer}\r\n                    titleStyle={styles.findTitle}\r\n                    loading={isLoading}\r\n                    disabled={isLoading}\r\n                  />\r\n                  <Button\r\n                    title=\"뒤로\"\r\n                    buttonStyle={styles.backButton}\r\n                    containerStyle={styles.backButtonContainer}\r\n                    titleStyle={styles.backTitle}\r\n                    onPress={() => navigation.goBack()}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  inner: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    width: 150,\r\n    height: 88,\r\n    marginBottom: 40,\r\n  },\r\n  rowSelector: {\r\n    height: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  selectorContainer: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  selected: {\r\n    position: \"absolute\",\r\n    borderRadius: 50,\r\n    height: 0,\r\n    width: 0,\r\n    top: -5,\r\n    borderRightWidth: 70,\r\n    borderBottomWidth: 70,\r\n    borderColor: \"white\",\r\n    backgroundColor: \"white\",\r\n  },\r\n  formContainer: {\r\n    backgroundColor: \"white\",\r\n    width: SCREEN_WIDTH - 30,\r\n    borderRadius: 10,\r\n    paddingTop: 32,\r\n    paddingBottom: 32,\r\n    alignItems: \"center\",\r\n  },\r\n  loginText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n  },\r\n  categoryText: {\r\n    textAlign: \"center\",\r\n    color: \"#03bcdb\",\r\n    fontSize: 24,\r\n    fontFamily: \"BMHANNA\",\r\n    backgroundColor: \"transparent\",\r\n    opacity: 0.54,\r\n  },\r\n  selectedCategoryText: {\r\n    opacity: 1,\r\n  },\r\n  inputContainer: {\r\n    width: 350,\r\n  },\r\n  findButton: {\r\n    backgroundColor: \"#03bcdb\",\r\n    borderWidth: 2,\r\n    borderColor: \"#03bcdb\",\r\n    borderRadius: 6,\r\n  },\r\n  backButton: {\r\n    backgroundColor: \"#e0e0e0\",\r\n    borderWidth: 2,\r\n    borderColor: \"#e0e0e0\",\r\n    borderRadius: 6,\r\n  },\r\n  findButtonContainer: {\r\n    marginTop: 10,\r\n    height: 60,\r\n    width: 80,\r\n  },\r\n  backButtonContainer: {\r\n    marginTop: 10,\r\n    marginLeft: 10,\r\n    height: 60,\r\n    width: 80,\r\n  },\r\n  findTitle: { fontWeight: \"bold\" },\r\n  backTitle: { fontWeight: \"bold\", color: \"#000\" },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"100%\",\r\n    marginTop: 30,\r\n    marginRight: 50,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}