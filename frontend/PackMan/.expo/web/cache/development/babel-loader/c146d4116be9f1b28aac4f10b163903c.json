{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/eun/Desktop/\\u1110\\u1173\\u11A8\\u1112\\u116A\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/s03p23d208/frontend/PackMan/components/Main/Camera/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nimport AWS from 'aws-sdk/dist/aws-sdk-react-native';\nvar albumBucketName = 'pack-man';\nvar bucketRegion = 'ap-northeast-2';\nvar IdentityPoolId = 'ap-northeast-2:2673b02d-7976-4784-ab48-7e398dd27835';\nAWS.config.update({\n  region: bucketRegion,\n  credentials: new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: IdentityPoolId\n  })\n});\nvar s3 = new AWS.S3({\n  apiVersion: '2006-03-01',\n  params: {\n    Bucket: albumBucketName\n  }\n});\nexport default function TakePhoto() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraRef = _useState4[0],\n      setCameraRef = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Camera, {\n    style: {\n      flex: 1\n    },\n    type: Camera.Constants.Type.back,\n    ref: function ref(_ref) {\n      setCameraRef(_ref);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 550,\n      marginLeft: 160\n    },\n    onPress: function _callee2() {\n      var photo, file, response, blob, _date, _today, params;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!cameraRef) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(cameraRef.takePictureAsync());\n\n            case 3:\n              photo = _context2.sent;\n              file = {\n                uri: photo.uri,\n                name: photo.fileName,\n                type: 'image/jpeg'\n              };\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetch(photo.uri));\n\n            case 7:\n              response = _context2.sent;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(response.blob());\n\n            case 10:\n              blob = _context2.sent;\n              _date = new Date();\n              _today = _date.getFullYear() + \"-\" + (_date.getMonth() + 1) + \"-\" + _date.getDate();\n              params = {\n                Bucket: albumBucketName,\n                Key: _today + \".jpeg\",\n                Body: blob,\n                ACL: 'public-read'\n              };\n              s3.upload(params, function (err, data) {\n                if (err) {\n                  console.log(err);\n                  return alert('There was an error uploading your photo');\n                }\n\n                alert('Successfully uploaded photo.');\n              });\n              console.log(file);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderRadius: \"50%\",\n      borderColor: 'white',\n      height: 50,\n      width: 50,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderRadius: \"50%\",\n      borderColor: 'white',\n      height: 40,\n      width: 40,\n      backgroundColor: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/eun/Desktop/특화프로젝트/s03p23d208/frontend/PackMan/components/Main/Camera/index.js"],"names":["React","useState","useEffect","Camera","AWS","albumBucketName","bucketRegion","IdentityPoolId","config","update","region","credentials","CognitoIdentityCredentials","s3","S3","apiVersion","params","Bucket","TakePhoto","hasPermission","setHasPermission","cameraRef","setCameraRef","requestPermissionsAsync","status","flex","Constants","Type","back","ref","backgroundColor","flexDirection","marginTop","marginLeft","takePictureAsync","photo","file","uri","name","fileName","type","fetch","response","blob","_date","Date","_today","getFullYear","getMonth","getDate","Key","Body","ACL","upload","err","data","console","log","alert","borderWidth","borderRadius","borderColor","height","width","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport { Camera } from 'expo-camera';\r\nimport AWS from 'aws-sdk/dist/aws-sdk-react-native';\r\n\r\nvar albumBucketName = 'pack-man';\r\nvar bucketRegion = 'ap-northeast-2';\r\nvar IdentityPoolId = 'ap-northeast-2:2673b02d-7976-4784-ab48-7e398dd27835';\r\n\r\nAWS.config.update({\r\n  region: bucketRegion,\r\n  credentials: new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: IdentityPoolId\r\n  })\r\n});\r\n\r\nvar s3 = new AWS.S3({\r\n  apiVersion: '2006-03-01',\r\n  params: {Bucket: albumBucketName}\r\n});\r\n\r\nexport default function TakePhoto() {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [cameraRef, setCameraRef] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Camera.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  if (hasPermission === null) {\r\n    return <View />;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Camera \r\n        style={{ flex: 1 }} \r\n        type={Camera.Constants.Type.back}\r\n        ref={ref => {\r\n          setCameraRef(ref);\r\n      }}>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: 'transparent',\r\n            flexDirection: 'row',\r\n          }}>\r\n          <TouchableOpacity\r\n            style={{marginTop: 550, marginLeft: 160}}\r\n            onPress={async() => {\r\n              if(cameraRef){\r\n                let photo = await cameraRef.takePictureAsync();\r\n                const file = {\r\n                  uri: photo.uri,\r\n                  name: photo.fileName,\r\n                  type: 'image/jpeg'\r\n                }\r\n\r\n                const response = await fetch(photo.uri);\r\n                const blob = await response.blob();\r\n                let _date = new Date();\r\n                let _today = `${_date.getFullYear()}-${_date.getMonth()+1}-${_date.getDate()}`;\r\n\r\n                var params = {\r\n                  Bucket: albumBucketName,\r\n                  Key: `${_today}.jpeg`,\r\n                  Body: blob,\r\n                  ACL: 'public-read',\r\n                }\r\n\r\n\r\n                s3.upload(params, function(err, data) {\r\n                  if (err) {\r\n                      console.log(err);\r\n                      return alert('There was an error uploading your photo');\r\n                  }\r\n                  alert('Successfully uploaded photo.');\r\n              });\r\n                \r\n                console.log(file);\r\n              }\r\n            }}>\r\n              <View style={{\r\n                borderWidth: 2,\r\n                borderRadius: \"50%\",\r\n                borderColor: 'white',\r\n                height: 50,\r\n                width: 50,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center'\r\n              }}>\r\n                <View style={{\r\n                  borderWidth: 2,\r\n                  borderRadius: \"50%\",\r\n                  borderColor: 'white',\r\n                  height: 40,\r\n                  width: 40,\r\n                  backgroundColor: 'white'\r\n                }}>\r\n                </View>\r\n              </View>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </Camera>\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}