{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../api\";\nimport { setFavs, setFav } from \"./roomsSlice\";\nvar userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    isLoggedIn: false,\n    token: null\n  },\n  reducers: {\n    logIn: function logIn(state, action) {\n      state.isLoggedIn = true;\n      state.token = action.payload.token;\n      state.id = action.payload.id;\n    },\n    logOut: function logOut(state, action) {\n      state.isLoggedIn = false;\n      state.token = null;\n    }\n  }\n});\nvar _userSlice$actions = userSlice.actions,\n    logIn = _userSlice$actions.logIn,\n    logOut = _userSlice$actions.logOut;\nexport { logIn, logOut };\nexport var userLogin = function userLogin(form) {\n  return function _callee(dispatch) {\n    var _await$api$login, _await$api$login$data, id, token;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.login(form));\n\n          case 3:\n            _await$api$login = _context.sent;\n            _await$api$login$data = _await$api$login.data;\n            id = _await$api$login$data.id;\n            token = _await$api$login$data.token;\n\n            if (id && token) {\n              dispatch(logIn({\n                token: token,\n                id: id\n              }));\n            }\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            alert(\"Wrong user/password\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n};\nexport var getFavs = function getFavs() {\n  return function _callee2(dispatch, getState) {\n    var _getState, _getState$usersReduce, id, token, _await$api$favs, data;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _getState = getState(), _getState$usersReduce = _getState.usersReducer, id = _getState$usersReduce.id, token = _getState$usersReduce.token;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(api.favs(id, token));\n\n          case 4:\n            _await$api$favs = _context2.sent;\n            data = _await$api$favs.data;\n            dispatch(setFavs(data));\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.warn(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n};\nexport var toggleFav = function toggleFav(roomId) {\n  return function _callee3(dispatch, getState) {\n    var _getState2, _getState2$usersReduc, id, token;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _getState2 = getState(), _getState2$usersReduc = _getState2.usersReducer, id = _getState2$usersReduc.id, token = _getState2$usersReduc.token;\n            dispatch(setFav({\n              roomId: roomId\n            }));\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(api.toggleFavs(id, roomId, token));\n\n          case 5:\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.warn(_context3.t0);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 7]], Promise);\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/eun/Desktop/특화프로젝트/s03p23d208/frontend/PackMan/redux/usersSlice.js"],"names":["createSlice","api","setFavs","setFav","userSlice","name","initialState","isLoggedIn","token","reducers","logIn","state","action","payload","id","logOut","actions","userLogin","form","dispatch","login","data","alert","getFavs","getState","usersReducer","favs","console","warn","toggleFav","roomId","toggleFavs","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../api\";\nimport { setFavs, setFav } from \"./roomsSlice\";\n\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    isLoggedIn: false,\n    token: null,\n  },\n  reducers: {\n    logIn(state, action) {\n      state.isLoggedIn = true;\n      state.token = action.payload.token;\n      state.id = action.payload.id;\n    },\n    logOut(state, action) {\n      state.isLoggedIn = false;\n      state.token = null;\n    },\n  },\n});\n\nexport const { logIn, logOut } = userSlice.actions;\n\nexport const userLogin = (form) => async (dispatch) => {\n  try {\n    const {\n      data: { id, token },\n    } = await api.login(form);\n    if (id && token) {\n      dispatch(logIn({ token, id }));\n    }\n  } catch (e) {\n    alert(\"Wrong user/password\");\n  }\n};\n\nexport const getFavs = () => async (dispatch, getState) => {\n  const {\n    usersReducer: { id, token },\n  } = getState();\n  try {\n    const { data } = await api.favs(id, token);\n    dispatch(setFavs(data));\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\nexport const toggleFav = (roomId) => async (dispatch, getState) => {\n  const {\n    usersReducer: { id, token },\n  } = getState();\n  dispatch(setFav({ roomId }));\n  try {\n    await api.toggleFavs(id, roomId, token);\n  } catch (e) {\n    console.warn(e);\n  }\n};\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}