{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/eun/Desktop/\\u1110\\u1173\\u11A8\\u1112\\u116A\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/s03p23d208/frontend/PackMan/components/Main/Calendars/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda } from \"react-native-calendars\";\nimport { Icon } from \"react-native-elements\";\n\nvar testIDs = require(\"../testIDs\");\n\nvar AgendaScreen = function (_Component) {\n  _inherits(AgendaScreen, _Component);\n\n  var _super = _createSuper(AgendaScreen);\n\n  function AgendaScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      items: {}\n    };\n    return _this;\n  }\n\n  _createClass(AgendaScreen, [{\n    key: \"loadItems\",\n    value: function loadItems(day) {\n      var _this2 = this;\n\n      setTimeout(function () {\n        for (var i = -15; i < 85; i++) {\n          var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n\n          var strTime = _this2.timeToString(time);\n\n          if (!_this2.state.items[strTime]) {\n            _this2.state.items[strTime] = [];\n            var numItems = Math.floor(Math.random() * 3 + 1);\n\n            for (var j = 0; j < numItems; j++) {\n              _this2.state.items[strTime].push({\n                name: \"Item for \" + strTime + \" #\" + j,\n                height: Math.max(50, Math.floor(Math.random() * 150))\n              });\n            }\n          }\n        }\n\n        var newItems = {};\n        Object.keys(_this2.state.items).forEach(function (key) {\n          newItems[key] = _this2.state.items[key];\n        });\n\n        _this2.setState({\n          items: newItems\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, item.name));\n    }\n  }, {\n    key: \"renderEmptyData\",\n    value: function renderEmptyData() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split(\"T\")[0];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Agenda, {\n        testID: testIDs.agenda.CONTAINER,\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: \"2017-05-16\",\n        renderItem: this.renderItem.bind(this),\n        renderEmptyData: this.renderEmptyData.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }), React.createElement(Icon, {\n        reverse: true,\n        name: \"plus\",\n        type: \"font-awesome\",\n        color: \"#03bcdb\",\n        containerStyle: styles.btnContainer,\n        onPress: function onPress() {\n          return console.log(\"hello\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return AgendaScreen;\n}(Component);\n\nexport { AgendaScreen as default };\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: \"white\",\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  btnContainer: {\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/eun/Desktop/특화프로젝트/s03p23d208/frontend/PackMan/components/Main/Calendars/index.js"],"names":["React","Component","Agenda","Icon","testIDs","require","AgendaScreen","props","state","items","day","setTimeout","i","time","timestamp","strTime","timeToString","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","setState","item","agenda","ITEM","styles","Alert","alert","emptyDate","r1","r2","date","Date","toISOString","split","CONTAINER","loadItems","bind","renderItem","renderEmptyData","rowHasChanged","btnContainer","console","log","StyleSheet","create","backgroundColor","flex","borderRadius","padding","marginRight","marginTop","paddingTop","justifyContent"],"mappings":"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","sourcesContent":["// import React from \"react\";\r\n\r\n// import { StyleSheet, View, Text } from \"react-native\";\r\n\r\n// import {\r\n//   Calendar,\r\n//   LocaleConfig,\r\n//   CalendarList,\r\n//   Agenda,\r\n// } from \"react-native-calendars\";\r\n\r\n// export default function Calendars() {\r\n//   LocaleConfig.locales[\"fr\"] = {\r\n//     monthNames: [\r\n//       \"1월\",\r\n//       \"2월\",\r\n//       \"3월\",\r\n//       \"4월\",\r\n//       \"5월\",\r\n//       \"6월\",\r\n//       \"7월\",\r\n//       \"8월\",\r\n//       \"9월\",\r\n//       \"10월\",\r\n//       \"11월\",\r\n//       \"12월\",\r\n//     ],\r\n//     monthNamesShort: [\r\n//       \"1월\",\r\n//       \"2월\",\r\n//       \"3월\",\r\n//       \"4월\",\r\n//       \"5월\",\r\n//       \"6월\",\r\n//       \"7월\",\r\n//       \"8월\",\r\n//       \"9월\",\r\n//       \"10월\",\r\n//       \"11월\",\r\n//       \"12월\",\r\n//     ],\r\n//     dayNames: [\r\n//       \"일요일\",\r\n//       \"월요일\",\r\n//       \"화요일\",\r\n//       \"수요일\",\r\n//       \"목요일\",\r\n//       \"금요일\",\r\n//       \"토요일\",\r\n//     ],\r\n//     dayNamesShort: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\r\n//     today: \"오늘\",\r\n//   };\r\n//   LocaleConfig.defaultLocale = \"fr\";\r\n\r\n//   return (\r\n//     <View style={styles.inner}>\r\n//       {/* <Calendar /> */}\r\n//       <Agenda\r\n//         items={{\r\n//           \"2020-09-22\": [{ text: \"item 1 - any js object\" }],\r\n//           \"2020-09-23\": [{ text: \"item 2 - any js object\", height: 80 }],\r\n//           \"2020-09-24\": [],\r\n//           \"2020-09-25\": [\r\n//             { text: \"item 3 - any js object\" },\r\n//             { text: \"any js object\" },\r\n//           ],\r\n//         }}\r\n//         renderItem={(item, firstItemInDay) => {\r\n//           return <View />;\r\n//         }}\r\n//         renderEmptyData={() => {\r\n//           return <Text>없다</Text>;\r\n//         }}\r\n//       />\r\n//     </View>\r\n//   );\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     flex: 1,\r\n//     backgroundColor: \"#fff\",\r\n//   },\r\n//   inner: {\r\n//     flex: 1,\r\n//     // alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//   },\r\n// });\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { Agenda } from \"react-native-calendars\";\r\nimport { Icon } from \"react-native-elements\";\r\n\r\nconst testIDs = require(\"../testIDs\");\r\n\r\nexport default class AgendaScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: {},\r\n    };\r\n  }\r\n\r\n  loadItems(day) {\r\n    setTimeout(() => {\r\n      for (let i = -15; i < 85; i++) {\r\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\r\n        const strTime = this.timeToString(time);\r\n        if (!this.state.items[strTime]) {\r\n          this.state.items[strTime] = [];\r\n          const numItems = Math.floor(Math.random() * 3 + 1);\r\n          for (let j = 0; j < numItems; j++) {\r\n            this.state.items[strTime].push({\r\n              name: \"Item for \" + strTime + \" #\" + j,\r\n              height: Math.max(50, Math.floor(Math.random() * 150)),\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const newItems = {};\r\n      Object.keys(this.state.items).forEach((key) => {\r\n        newItems[key] = this.state.items[key];\r\n      });\r\n      this.setState({\r\n        items: newItems,\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  renderItem(item) {\r\n    return (\r\n      <TouchableOpacity\r\n        testID={testIDs.agenda.ITEM}\r\n        style={[styles.item, { height: item.height }]}\r\n        onPress={() => Alert.alert(item.name)}\r\n      >\r\n        <Text>{item.name}</Text>\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  renderEmptyData() {\r\n    return (\r\n      <View style={styles.emptyDate}>\r\n        <Text>This is empty date!</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  rowHasChanged(r1, r2) {\r\n    return r1.name !== r2.name;\r\n  }\r\n\r\n  timeToString(time) {\r\n    const date = new Date(time);\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Agenda\r\n          testID={testIDs.agenda.CONTAINER}\r\n          items={this.state.items}\r\n          loadItemsForMonth={this.loadItems.bind(this)}\r\n          selected={\"2017-05-16\"}\r\n          renderItem={this.renderItem.bind(this)}\r\n          renderEmptyData={this.renderEmptyData.bind(this)}\r\n          rowHasChanged={this.rowHasChanged.bind(this)}\r\n          // markingType={'period'}\r\n          // markedDates={{\r\n          //    '2017-05-08': {textColor: '#43515c'},\r\n          //    '2017-05-09': {textColor: '#43515c'},\r\n          //    '2017-05-14': {startingDay: true, endingDay: true, color: 'blue'},\r\n          //    '2017-05-21': {startingDay: true, color: 'blue'},\r\n          //    '2017-05-22': {endingDay: true, color: 'gray'},\r\n          //    '2017-05-24': {startingDay: true, color: 'gray'},\r\n          //    '2017-05-25': {color: 'gray'},\r\n          //    '2017-05-26': {endingDay: true, color: 'gray'}}}\r\n          // monthFormat={'yyyy'}\r\n          // theme={{calendarBackground: 'red', agendaKnobColor: 'green'}}\r\n          //renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\r\n          // hideExtraDays={false}\r\n        />\r\n        <Icon\r\n          reverse\r\n          name=\"plus\"\r\n          type=\"font-awesome\"\r\n          color=\"#03bcdb\"\r\n          containerStyle={styles.btnContainer}\r\n          onPress={() => console.log(\"hello\")}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    backgroundColor: \"white\",\r\n    flex: 1,\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginRight: 10,\r\n    marginTop: 17,\r\n  },\r\n  emptyDate: {\r\n    height: 15,\r\n    flex: 1,\r\n    paddingTop: 30,\r\n  },\r\n  btnContainer: {\r\n    flex: 1,\r\n    // alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}